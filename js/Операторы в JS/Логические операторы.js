//Логические операторы

//Оператор || (или)

/*
Оператор ИЛИ, записывается, как две вертикальные черты
Процесс его работы следующий:
1.	Вычисляет операнды слева направо.
2.	Каждый операнд конвертирует в логическое значение.
	Если результат true, останавливаетсяи возвращает
	исходное значение этого операнда.
3.	Если все операнды являются ложными (false), возвращает
	значение последнего из них.
*/

//Булевые значения
console.log(true || true);
console.log(false || true);
console.log(true || false);
console.log(false || false);

//Разные типы

//Первый true это 1
console.log(1 || 0);
//Первый true это true
console.log(true || `Vladislav`);
//Первый true это 58
console.log(null || 58);
//Первый true это Vladislav
console.log(null || `Vladislav` || 0);
//true нет совсем, вернёт последнее значение - 0
console.log(undefined || `` || null || 0);

//Присвоение значения в переменную

let userName = ``;
let userNickName = `Vladislav`;

let user = userName || userNickName || "Без имени";
console.log(user);

//Сокращённое вычисление. Условие.
let admins = 0; 
let users = 5;
admins > users || users++;
console.log(users);

//Оператор && (и)
/*
Следующий логический оператор это И. Пишется как два
амперсанда && выполняет слудующие действия:
1.	Вычисляет операнды слева направо.
2.	Каждый операнд преобразует в логическое значение.
	Если результат false, останавливается и возвращает исходное
	значение этого операнда.
3.	Если все операнды были истинными, возвращает значение последнего.
*/

//Булевые значения
console.log(true && true);
console.log(false && true);
console.log(true && false);
console.log(false && false);

//Разные типы

//Пример 1. 0 - false
console.log(`Vladislav` && 0 && 2 && 3);
//Пример 2. null - false
console.log(1 && 2 && null && 3);
//Пример 3. Все true
console.log(`15` && `42`);

//Приоритет && больше чем ||
console.log(1 && 0 || 2 && 1);

//Подоие условия
let users1 = 1;//Если будет 0, то ничего не выведится
(users1 > 0) && console.log(`Пользователей: ${users1}`); //Получаем 1

//Оператор ! (НЕ)
/*
Выполняет следующие действия:
1.	Сначала проводит аргумент к логическому типу true / false.
2.	Затем возвращает противоположное значение
*/

//Булевые значения
console.log(!true);

//Разные типы
console.log(!null);
console.log(!1);
console.log(!``);
console.log(!`Vladislav`);

/*
Приоритет НЕ ! является наивысшим из всех логических операторов,
поэтому он всегда выполняется первым, перед && или ||.
*/
console.log(!true && 58 || 18 && !1);

//Используется для преобразования типа в boolean
console.log(!!`Vladislav`);
//или
console.log(Boolean(`Vladislav`));

